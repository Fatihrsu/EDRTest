#include <windows.h>
#include <stdio.h>

typedef int (WINAPI *MessageBoxA_t)(HWND, LPCSTR, LPCSTR, UINT);
MessageBoxA_t OriginalMessageBoxA = NULL;

int WINAPI HookedMessageBoxA(HWND hWnd, LPCSTR lpText, LPCSTR lpCaption, UINT uType) {
    return OriginalMessageBoxA(hWnd, "Hooked!", lpCaption, uType);
}

void HookIAT(HMODULE hModule, LPCSTR lpModuleName, LPCSTR lpFunctionName, void* pHookFunction) {
    ULONG ulSize = 0;
    PIMAGE_IMPORT_DESCRIPTOR pImportDesc = (PIMAGE_IMPORT_DESCRIPTOR)ImageDirectoryEntryToData(
        hModule, TRUE, IMAGE_DIRECTORY_ENTRY_IMPORT, &ulSize);

    while (pImportDesc->Name) {
        LPCSTR szModuleName = (LPCSTR)((PBYTE)hModule + pImportDesc->Name);
        if (_stricmp(szModuleName, lpModuleName) == 0) {
            PIMAGE_THUNK_DATA pThunk = (PIMAGE_THUNK_DATA)((PBYTE)hModule + pImportDesc->FirstThunk);
            while (pThunk->u1.Function) {
                PROC* ppfn = (PROC*)&pThunk->u1.Function;
                PROC pfn = *ppfn;
                if (pfn == (PROC)GetProcAddress(GetModuleHandleA(lpModuleName), lpFunctionName)) {
                    DWORD dwOldProtect;
                    VirtualProtect(ppfn, sizeof(PROC), PAGE_READWRITE, &dwOldProtect);
                    *ppfn = (PROC)pHookFunction;
                    VirtualProtect(ppfn, sizeof(PROC), dwOldProtect, &dwOldProtect);
                    break;
                }
                pThunk++;
            }
            break;
        }
        pImportDesc++;
    }
}

void UnhookIAT(HMODULE hModule, LPCSTR lpModuleName, LPCSTR lpFunctionName, void* pOriginalFunction) {
    HookIAT(hModule, lpModuleName, lpFunctionName, pOriginalFunction);
}

int main() {
    HMODULE hModule = GetModuleHandle(NULL);
    OriginalMessageBoxA = (MessageBoxA_t)GetProcAddress(GetModuleHandleA("user32.dll"), "MessageBoxA");
    HookIAT(hModule, "user32.dll", "MessageBoxA", HookedMessageBoxA);

    MessageBoxA(NULL, "Original!", "Test", MB_OK);

    UnhookIAT(hModule, "user32.dll", "MessageBoxA", OriginalMessageBoxA);

    return 0;
}
